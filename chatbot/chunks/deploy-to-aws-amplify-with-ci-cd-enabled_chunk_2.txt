We will update this to the new domain of our web app. To do this, go to your API’s method, and click ‘Enable CORS’ in the Actions menu. In the Access-Control-Allow-Headers section, add Access-Control-Allow-Origin to the list of allowed headers, and in the Access-Control-Allow-Origin field add your web app’s URL in between single quotation marks in order to allow access to your API from your website. Then click Enable CORS. Deploy your API from the Actions menu to apply the changes: Note: If you deploy your API to a new stage as shown below, you will need to update the URL used in your web app code to invoke the API: The Invoke URL for each stage can be found in the Stages section of your API. Update API call in code: n this section, we will update the code to reflect our deployment changes. As shown below, we will update the code in AWS CodeCommit. Navigate to the src folder App.js file. Edit the code to use the API key defined in the environment variables, which we set in Amplify Build Settings during deployment. Next, we will update the fetch url value to be the Invoke URL of the newly deployed API. Finally, in the headers object, edit the value of the Access-Control-Allow-Origin header to be the domain of your deployed website to allow access to the invoked API from your web application. To finalize the changes, commit the changes with a descriptive commit message.