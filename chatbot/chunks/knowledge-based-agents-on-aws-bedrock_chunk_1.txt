Today’s agents can more than just say, they can do. Knowledge-Based Agents using AWS Bedrock AWS Bedrock makes it extremely easy to create AI Agents. Agents in Bedrock can be equipped with a knowledge base containing all kinds of information for them to look up in order to aid them achieve their tasks. Moreover, they can be hooked to lambda functions and external APIs via openAPI schemas , giving them the ability to call these tools when they see fit. This greatly expands the realm of what’s possible to do with this technology. The Components of AWS Bedrock Agents The Bedrock Agent development platform is made of 5 main components. We’ll go over each component below. Agent details Agent Details is the principal component to configure when building a Bedrock Agent. It’s the only required component. In Agent Details, you specify instructions to your agent, detailing everything from its purpose to its tone, behavior, the rules it has to follow, as well as information about the tools and knowledge it has access to. You also specify the agent’s AI model, its name, as well as a few extra additional features. Pro-Tip: The clearer and more detailed your instructions, the better your agent behaves. Follow the prompt guides of the provider whose model you choose for your agent. Here are links for some: Action groups Action Groups allow you to add functionalities to your agents which go beyond just responding to queries. They allow your agent to call lambda functions and other APIs via API Gateway when it see fit. You can define action groups with: Lambda function details, in which you create a lambda function containing the function tools the agent will call. OpenAPI schemas, which allow you to define APIs your agent can call via lambda or an API Gateway. Pro-Tip: Even though they’re optional, it’s important to give detailed descriptions to your action group functions and their parameters. This will help your agent call the right function at the right time .