The more function tools you want to give your agent, the more it becomes important to describe in detail what every function and parameter does. Knowledge bases Knowledge bases allow you to equip your agent with extra domain-specific information which you want your agent to be able to access. Your agent will query the knowledge base you equip it with in order to enhance its responses and improve its ability in invoking groups. Knowledges bases take S3 as their data source, and you can attach up to 5 data sources to a single Knowledge Base. Pro-Tip: Attach metadata files to your data source S3 files. Metadata files could greatly enhance search accuracy and open up new search techniques and possibilities for your agent. Refer to AWS’s guide on Metadata Files: Set up a data source for your knowledge base – Amazon Bedrock Guardrail Details Guardrails allow you to have finer control over the content you want your agent to engage with. You can create guardrails to configure content filters, define blocked messages, as well as add denied topics, word filters, and sensitive information filters. Guardrails ensure your agent’s remains well behaved and focused on the scope of which it was created to fulfill. Pro-Tip: Although a powerful tool to keep your agent in-check, too many guardrails can severely limit the functionality of your agent, as well as lead to potential false positives – situations where the system incorrectly identifies a risk or violation that isn’t actually present. Advanced Prompts Under the hood, AWS Bedrock Agents go through a 4-step prompting process before returning answers to the users. These steps are: Pre-processing Orchestration Knowledge base response generation Post-processing (disabled by default) Advanced Prompts allow you to take a look at the prompt given to the system at each step and customize it to your will. You can also enable and disable any of those steps (except for the orchestration step if your agent has action groups and/or knowledge bases). You can also define a Lambda function to parse the raw LLM output and derive key information from it to be used in the runtime flow. This can be done for every prompt component mentioned above. Pro-Tip: Advanced Prompts is a very powerful feature, allowing you fine control over every component of your agent system. Although might be intimidating at first, taking the time to learn and experiment with prompts at every step of the prompting process may prove very beneficial in taking your agent’s performance to the next level. One Final Component: You Bedrock Agents are built up from multiple components which can work together to create truly marvelous autonomous systems. Optimizing each of these components and linking them together efficiently is like assembling together a piece of art.